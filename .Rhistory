vrednost <- sum(mozne_poti[,type])/N
premija <- vrednost/(1+R)^U
premija
}
monte(60,1.05,0.95,15,0.01,8,"put",10)
monte(60,1.05,0.95,15,0.01,8,"put",100)
monte(60,1.05,0.95,15,0.01,8,"put",1000)
q <- (1+R-d)/(u-d)
#nardimo matriko velikosti NxU
mozne_poti <- as.data.frame(matrix(1, N, U))
View(mozne_poti)
#nakljucno generiramo vrednosti 0 in 1 po binomski porazdelitvi
for (i in 1:N) {
mozne_poti[i,] <- rbinom(U, 1, q)
}
#zamenjamo 0 in 1 z u in d
for (i in 1:length(mozne_poti[,1])) {
mozne_poti[i,] = replace(mozne_poti[i,],mozne_poti[i,]==1, u)
mozne_poti[i,] = replace(mozne_poti[i,],mozne_poti[i,]==0, d)
}
mozne_poti <- cbind(S0 <- rep(S0, length(mozne_poti[,1])), mozne_poti)
#
for (j in 1:U+1) {
mozne_poti[i,] <- t(cumprod(t(mozne_poti[i,])))
}
#nardimo matriko velikosti NxU
mozne_poti <- as.data.frame(matrix(1, N, U))
#nakljucno generiramo vrednosti 0 in 1 po binomski porazdelitvi
for (i in 1:N) {
mozne_poti[i,] <- rbinom(U, 1, q)
}
#zamenjamo 0 in 1 z u in d
for (i in 1:length(mozne_poti[,1])) {
mozne_poti[i,] = replace(mozne_poti[i,],mozne_poti[i,]==1, u)
mozne_poti[i,] = replace(mozne_poti[i,],mozne_poti[i,]==0, d)
}
mozne_poti <- cbind(S0 <- rep(S0, length(mozne_poti[,1])), mozne_poti)
#
for (j in 1:U+1) {
mozne_poti[,j] <- t(cumprod(t(mozne_poti[,j])))
}
#
for (j in 1:U+1) {
mozne_poti[,j] <- t(cumprod(t(mozne_poti[j,])))
}
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Raisp2.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Raisp2.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Raisp2.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Matusek2.r", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Matusek2.r", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Raisp2.R", encoding = 'UTF-8', echo=TRUE)
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Raisp2.R", encoding = 'UTF-8', echo=TRUE)
histogram100 = hist(MC100,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 100")
histogram1000 = hist(MC1000,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 1000")
povprecje10 <- mean(MC10)
povprecje100 <- mean(MC100)
povprecje1000 <- mean(MC1000)
abline(a = povprecje10, col = "green")
abline(v = povprecje10, col = "green")
abline(v = povprecje10, col = "green", lwd= 2)
abline(v = povprecje10, col = "green")
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = povprecje10, col = "green", lwd = 2)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green", lwd = 2)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green", lwd = 1)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green", lwd = 3)
binom <- binomski(60,1.05,0.95,15,0.01,8,"put")
#2. naloga
#a)
binomski <- function(S0, u, d, U, R, T, type) {
#generiramo matriko s permutacijami u in d
mozne_poti <- as.data.frame(hcube(rep(2,U),translation <- 1))
for (i in 1:length(mozne_poti[,1])) {
mozne_poti[i,] <- replace(mozne_poti,mozne_poti[i,] == 1, d)
mozne_poti[i,] <-  replace(mozne_poti,mozne_poti[i,] == 2, u)
}
mozne_poti <- cbind(S0 <- rep(S0, length(mozne_poti[,1])), mozne_poti)
#generiramo vrednosti delnice skozi cas in njeno verjetnost
verjetnosti <- rep(0,length(mozne_poti[,1]))
q <- (1+R-d)/(u-d)
for(i in 1:length(mozne_poti[,1])) {
st_u <- count(mozne_poti[i,] == u)
st_d <- count(mozne_poti[i,] == d)
verjetnosti[i] <- q^st_u * (1-q)^st_d
vrednosti_delnice <- t(cumprod(t(mozne_poti[i,])))
mozne_poti[i,] <- vrednosti_delnice
}
mozne_poti["izplacilo"] <- rep(0, length(mozne_poti[,1]))
#generiramo mozna izplacila ob zapadlosti
for(i in 1:length(mozne_poti[,1])) {
mozne_poti[i, "izplacilo"] <- izplacilo(mozne_poti[i,-(U+2)], T, type)
}
mozne_poti["verjetnost"] <- verjetnosti
#izracnuamo premijo na podlagi verjetnosti in diskontiranja
mozne_poti["vrednosti"] <- mozne_poti["izplacilo"] / (1+R)^U
premija <- sum(mozne_poti$verjetnost * mozne_poti$vrednosti)
return(premija)
}
#preveril vrednosti
binomski(50,1.05,0.95,5,0.03,3,"call")
binomski(50,1.05,0.95,5,0.03,3,"put")
binomski(90, 1.15, 0.8 , 10, 0.01, 3, "call")
#2. naloga
#a)
binomski <- function(S0, u, d, U, R, T, type) {
#generiramo matriko s permutacijami u in d
mozne_poti <- as.data.frame(hcube(rep(2,U),translation <- 1))
for (i in 1:length(mozne_poti[,1])) {
mozne_poti[i,] <- replace(mozne_poti[i,],mozne_poti[i,] == 1, d)
mozne_poti[i,] <-  replace(mozne_poti[i,],mozne_poti[i,] == 2, u)
}
mozne_poti <- cbind(S0 <- rep(S0, length(mozne_poti[,1])), mozne_poti)
#generiramo vrednosti delnice skozi cas in njeno verjetnost
verjetnosti <- rep(0,length(mozne_poti[,1]))
q <- (1+R-d)/(u-d)
for(i in 1:length(mozne_poti[,1])) {
st_u <- count(mozne_poti[i,] == u)
st_d <- count(mozne_poti[i,] == d)
verjetnosti[i] <- q^st_u * (1-q)^st_d
vrednosti_delnice <- t(cumprod(t(mozne_poti[i,])))
mozne_poti[i,] <- vrednosti_delnice
}
mozne_poti["izplacilo"] <- rep(0, length(mozne_poti[,1]))
#generiramo mozna izplacila ob zapadlosti
for(i in 1:length(mozne_poti[,1])) {
mozne_poti[i, "izplacilo"] <- izplacilo(mozne_poti[i,-(U+2)], T, type)
}
mozne_poti["verjetnost"] <- verjetnosti
#izracnuamo premijo na podlagi verjetnosti in diskontiranja
mozne_poti["vrednosti"] <- mozne_poti["izplacilo"] / (1+R)^U
premija <- sum(mozne_poti$verjetnost * mozne_poti$vrednosti)
return(premija)
}
#preveril vrednosti
binomski(50,1.05,0.95,5,0.03,3,"call")
binomski(50,1.05,0.95,5,0.03,3,"put")
binomski(90, 1.15, 0.8 , 10, 0.01, 3, "call")
binom <- binomski(60,1.05,0.95,15,0.01,8,"put")
abline(v = binom, col = "red", tyl = 2)
abline(v = binom, col = "red", lty = 2)
abline(v = binom, col = "red", lty = 2)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
sd(10)
sd(MC100)
arrows(x0 = povprecje10, y0 = 0, x1 = povprecje10 + odklon10)
odklon10 <- sd(MC10)
odklon100 <- sd(MC100)
odklon1000 <- sd(MC1000)
arrows(x0 = povprecje10, y0 = 0, x1 = povprecje10 + odklon10)
arrows(x0 = povprecje10, y0 = 0, x1 = povprecje10 + odklon10, code= 2)
arrows(x0 = povprecje10, y0 = 0, x1 = povprecje10 + odklon10, code= 3)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10, y0 = 0, x1 = povprecje10 + odklon10, code= 3)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green")
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green", lwd = 3)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green", lwd = 2)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green", lwd = 2)
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green")
# N = 10
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green")
# N = 100
histogram100 <- hist(MC100,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 100")
abline(v = povprecje100, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje100 - odklon100, y0 = 0, x1 = povprecje100 + odklon100, code= 3, col = "green")
# N = 1000
histogram1000 <- hist(MC1000,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 1000")
abline(v = povprecje1000, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje1000 - odklon1000, y0 = 0, x1 = povprecje1000 + odklon1000, code= 3, col = "green")
# N = 10
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green", length = 0.25)
# N = 10
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green", length = 0.1)
abline(v = povprecje10, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, col = "green", length = 0.1)
# N = 100
histogram100 <- hist(MC100,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 100")
abline(v = povprecje100, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje100 - odklon100, y0 = 0, x1 = povprecje100 + odklon100, code= 3, col = "green", length = 0.1)
# N = 1000
histogram1000 <- hist(MC1000,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 1000")
abline(v = povprecje1000, col = "green")
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje1000 - odklon1000, y0 = 0, x1 = povprecje1000 + odklon1000, code= 3, col = "green", length = 0.1)
# N = 10
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, lwd = 2, col = "green", length = 0.1)
# N = 100
histogram100 <- hist(MC100,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 100")
abline(v = povprecje100, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje100 - odklon100, y0 = 0, x1 = povprecje100 + odklon100, code= 3, lwd = 2, col = "green", length = 0.1)
# N = 1000
histogram1000 <- hist(MC1000,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 1000")
abline(v = povprecje1000, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje1000 - odklon1000, y0 = 0, x1 = povprecje1000 + odklon1000, code= 3, lwd = 2, col = "green", length = 0.1)
histogram10 = hist(N10,xlim=c(0,10),col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = mean(N10),
col = "green",
lwd = 2)
histogram10 = hist(N10,xlim=c(0,10),col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = mean(N10),
col = "green",
lwd = 2)
histogram10 = hist(N10,xlim=c(0,10),col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = mean(N10),
col = "green",
lwd = 2)
abline(v = tocno ,
col = "red",
lwd = 2, lty = "dotted" )
segments(x0=mean(N10)-sd(N10),x1=mean(N10)+sd(N10), y0=0,y1=0   ,
col = "green",
lwd = 2)
arrows(x0=mean(N10)-sd(N10),x1=mean(N10)+sd(N10), y0=0,y1=0, col="green", lwd=2, length=0.08)
arrows(x1=mean(N10)-sd(N10),x0=mean(N10)+sd(N10), y0=0,y1=0, col="green",lwd = 2, length=0.08)
legend("topright", c("Monte Carlo", "Analiza modela"), col=c("green", "red"), lty = c(1,3),lwd = 3)
histogram10
# N = 10
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, lwd = 2, col = "green", length = 0.1)
# N = 100
histogram100 <- hist(MC100,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 100")
abline(v = povprecje100, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje100 - odklon100, y0 = 0, x1 = povprecje100 + odklon100, code= 3, lwd = 2, col = "green", length = 0.1)
# N = 1000
histogram1000 <- hist(MC1000,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 1000")
abline(v = povprecje1000, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje1000 - odklon1000, y0 = 0, x1 = povprecje1000 + odklon1000, code= 3, lwd = 2, col = "green", length = 0.1)
legend("topright", c("Monte Carlo", "analiza modela"), col = c("green", "red"), lty=1:2)
# N = 10
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, lwd = 2, col = "green", length = 0.1)
legend("topright", c("Monte Carlo", "analiza modela"), col = c("green", "red"), lty=1:2, box.lty=0)
legend("topright", c("Monte Carlo", "analiza modela"), col = c("green", "red"), lty=1:2)#, box.lty=0)
# N = 10
histogram10 <- hist(MC10,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 10")
abline(v = povprecje10, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje10 - odklon10, y0 = 0, x1 = povprecje10 + odklon10, code= 3, lwd = 2, col = "green", length = 0.1)
legend("topright", c("Monte Carlo", "analiza modela"), col = c("green", "red"), lty=1:2, box.lty=0)
# N = 100
histogram100 <- hist(MC100,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 100")
abline(v = povprecje100, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje100 - odklon100, y0 = 0, x1 = povprecje100 + odklon100, code= 3, lwd = 2, col = "green", length = 0.1)
legend("topright", c("Monte Carlo", "analiza modela"), col = c("green", "red"), lty=1:2, box.lty=0)
# N = 1000
histogram1000 <- hist(MC1000,xlim=c(0,10), col = "yellow",xlab = "Premija",main = "Monte Carlo: N = 1000")
abline(v = povprecje1000, col = "green", lwd = 2)
abline(v = binom, col = "red", lty = 2)
arrows(x0 = povprecje1000 - odklon1000, y0 = 0, x1 = povprecje1000 + odklon1000, code= 3, lwd = 2, col = "green", length = 0.1)
legend("topright", c("Monte Carlo", "analiza modela"), col = c("green", "red"), lty=1:2, box.lty=0)
#izberes model in mores ugotovit katera porazdelitev je
#2a h = 0.25, rounding, 2c: maxit = 10000 (jamra ce ni dovolj blizu 1),
#tol = 0.0005
#3a mean, 3b
pareto1
#izberes model in mores ugotovit katera porazdelitev je
#2a h = 0.25, rounding, 2c: maxit = 10000 (jamra ce ni dovolj blizu 1),
#tol = 0.0005
#3a mean, 3b
pexp(pareto1)
#izberes model in mores ugotovit katera porazdelitev je
#2a h = 0.25, rounding, 2c: maxit = 10000 (jamra ce ni dovolj blizu 1),
#tol = 0.0005
#3a mean, 3b
pexp(ppareto1)
setwd("C:/Users/Justin/The-power-of-adjacent-choices")
dim1_10000_10000 <- read.csv2("maksimalno_stevilo_zogic_100_100_10000_10000_1_.csv")
setwd("C:/Users/Justin/The-power-of-adjacent-choices")
dim1_10000_10000 <- read.csv2("maksimalno_stevilo_zogic_100_100_10000_10000_1_1.csv")
View(dim1_10000_10000)
dim1_10000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_10000_10000_1_1.csv")
source("C:/Users/Justin/FMF/3.letnik/FinPra/Laboratorijske/Raisp1.r", encoding = 'UTF-8', echo=TRUE)
dim1_20000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_20000_10000_1_1.csv")
dim1_30000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_30000_10000_1_1.csv")
dim1_40000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_40000_10000_1_1.csv")
dim1_50000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_50000_10000_1_1.csv")
dim1_60000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_60000_10000_1_1.csv")
plot()
View(sl)
View(dim1_60000_10000)
View(dim1_10000_10000)
plot(dim1_10000_10000$Maksimum, c(1:100), col = "red", type="l",
main="n žog, n košev, povprečje 100 poskusov")
plot( c(1:100), dim1_10000_10000$Maksimum, col = "red", type="l",
main="n žog, n košev, povprečje 100 poskusov")
plot( c(1:100), dim1_10000_10000$Maksimum, col = "red", type="l",
main="n žog", ylab= "Maksimalna vrednostn košev, povprečje 100 poskusov", ylim=c(0,7))
plot( c(1:100), dim1_10000_10000$Maksimum, col = "red", type="l",
main="n žog", ylab= "Maksimalna vrednostn košev, povprečje 100 poskusov", ylim=c(0,5))
plot( c(1:100), dim1_10000_10000$Maksimum, col = "red", type="l",
main="n žog, n košev, povprečje 100 poskusov", ylab= "Maksimalna vrednost", ylim=c(0,5))
lines(c(100:200), dim1_10000_10000$Maksimum, col = "red")
lines(c(101:200), dim1_20000_10000$Maksimum, col = "red")
library(tidyverse)
ggplot(data=dim1_10000_10000, mapping= aes(x=c(1:100), y= dim1_10000_10000$Maksimum))
ggplot(data=dim1_10000_10000, mapping= aes(x=c(1:100), y= dim1_10000_10000$Maksimum)) + geom_boxplot(alpha=0)
ggplot(data=dim1_10000_10000, mapping= aes(x=c(1:100), y= dim1_10000_10000$Maksimum)) + geom_boxplot(alpha=0) +geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data=dim1_10000_10000, mapping= aes(x=c(1), y= dim1_10000_10000$Maksimum)) + geom_boxplot(alpha=0) +geom_jitter(alpha = 0.3, color = "tomato")
poskusi <- 1:100
primerjava_st_zog_dim1_max <- merge(dim1_10000_10000,dim1_20000_10000)
View(primerjava_st_zog_dim1_max)
primerjava_st_zog_dim1_max <- merge(dim1_10000_10000,dim1_20000_10000, by=c("id"))
primerjava_st_zog_dim1_max <- merge(dim1_10000_10000,dim1_20000_10000, all=TRUE)
View(primerjava_st_zog_dim1_max)
View(dim1_10000_10000)
View(dim1_20000_10000)
View(dim1_30000_10000)
primerjava_st_zog_dim1_max <- left_join(dim1_10000_10000,dim1_20000_10000, all=TRUE)
primerjava_st_zog_dim1_max <- left_join(dim1_10000_10000,dim1_20000_10000, all=TRUE)
View(primerjava_st_zog_dim1_max)
primerjava_st_zog_dim1_max <- left_join(x=dim1_10000_10000,y=dim1_20000_10000, all=TRUE)
View(primerjava_st_zog_dim1_max)
dim1_10000_10000 <- as.data.frame(read.csv("maksimalno_stevilo_zogic_100_100_10000_10000_1_1.csv"))
View(dim1_10000_10000)
maksimumi_st_zog_1dim[c("max1")] <- dim1_10000_10000[1,]
maksimumi_st_zog_1dim <- dim1_10000_10000[1,]
View(maksimumi_st_zog_1dim)
maksimumi_st_zog_1dim <- dim1_10000_10000[,1]
View(primerjava_st_zog_dim1_max)
maksimumi_st_zog_1dim("max1") <- dim1_10000_10000[,1]
maksimumi_st_zog_1dim <- rep(0,100)
maksimumi_st_zog_1dim <- as.data.frame(dim1_10000_10000[,1])
maksimumi_st_zog_1dim["max2"] <- dim1_20000_10000[,1]
View(maksimumi_st_zog_1dim)
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[,1]
maksimumi_st_zog_1dim["max4"] <- dim1_40000_10000[,1]
maksimumi_st_zog_1dim["max5"] <- dim1_50000_10000[,1]
maksimumi_st_zog_1dim["max6"] <- dim1_60000_10000[,1]
colnames(maksimumi_st_zog_1dim) <- "max1"
View(maksimumi_st_zog_1dim)
maksimumi_st_zog_1dim["max2"] <- dim1_20000_10000[,1]
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[,1]
maksimumi_st_zog_1dim["max4"] <- dim1_40000_10000[,1]
maksimumi_st_zog_1dim["max5"] <- dim1_50000_10000[,1]
maksimumi_st_zog_1dim["max6"] <- dim1_60000_10000[,1]
source("C:/Users/Justin/The-power-of-adjacent-choices/analiza.r", encoding = 'UTF-8', echo=TRUE)
View(maksimumi_st_zog_1dim)
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = Stevilo_zog, y = Vrednost)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = Stevilo_zog, y = Vrednost)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = Max1, y = Vrednost)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = max1, y = Vrednost)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = "", y = "")) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = "", y = max1)) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = "", y = c("max1","max2"))) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
maksimumi_st_zog_1dim <- maksimumi_st_zog_1dim %>% pivot_longer(names_to = "stevilo_zog", values_to = "maksimum")
maksimumi_st_zog_1dim <- as.data.frame(1:100)
View(maksimumi_st_zog_1dim)
colnames(maksimumi_st_zog_1dim) <- "id"
maksimumi_st_zog_1dim["max1"] <- dim1_10000_10000[,1]
maksimumi_st_zog_1dim["max2"] <- dim1_20000_10000[,1]
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[,1]
maksimumi_st_zog_1dim["max4"] <- dim1_40000_10000[,1]
maksimumi_st_zog_1dim["max5"] <- dim1_50000_10000[,1]
maksimumi_st_zog_1dim["max6"] <- dim1_60000_10000[,1]
ggplot(data = maksimumi_st_zog_1dim, mapping = aes(x = "id", y = "")) +
geom_boxplot(alpha = 0) +
geom_jitter(alpha = 0.3, color = "tomato")
maksimumi_st_zog_1dim <- maksimumi_st_zog_1dim %>% pivot_longer(names_to = "stevilo_zog", values_to = "maksimum", cols= "id")
maksimumi_st_zog_1dim <- as.data.frame(1:100)
colnames(maksimumi_st_zog_1dim) <- "id"
maksimumi_st_zog_1dim["max1"] <- dim1_10000_10000[,1]
maksimumi_st_zog_1dim["max2"] <- dim1_20000_10000[,1]
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[,1]
maksimumi_st_zog_1dim["max4"] <- dim1_40000_10000[,1]
maksimumi_st_zog_1dim["max5"] <- dim1_50000_10000[,1]
maksimumi_st_zog_1dim["max6"] <- dim1_60000_10000[,1]
maksimumi_st_zog_1dim <- as.data.frame(dim1_10000_10000[,1])
colnames(maksimumi_st_zog_1dim) <- "maksimumi"
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, dim1_20000_10000[,1])
maksimumi_st_zog_1dim <- as.data.frame(dim1_10000_10000[,1])
colnames(maksimumi_st_zog_1dim) <- "maksimumi"
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, dim1_20000_10000[,1])
View(dim1_10000_10000)
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[1,]
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[,1]
maksimumi_st_zog_1dim <- as.data.frame(dim1_10000_10000[,1])
colnames(maksimumi_st_zog_1dim) <- "maksimumi"
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, dim1_20000_10000[,1])
dim1_20000_10000[,1]
maksimumi_st_zog_1dim <- as.data.frame(dim1_10000_10000[,1])
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, dim1_20000_10000[,1])
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[,1]
maksimumi_st_zog_1dim["max4"] <- dim1_40000_10000[,1]
maksimumi_st_zog_1dim["max5"] <- dim1_50000_10000[,1]
maksimumi_st_zog_1dim <- as.data.frame(dim1_10000_10000[,1])
View(maksimumi_st_zog_1dim)
dim1_10000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_10000_10000_1_1.csv")
maksimumi_st_zog_1dim <- as.data.frame(dim1_10000_10000[,1])
colnames(maksimumi_st_zog_1dim) <- "Maksimum"
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, dim1_20000_10000[,1])
maksimumi_st_zog_1dim["max3"] <- dim1_30000_10000[,1]
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, ts(dim1_20000_10000[,1]))
colnames(maksimumi_st_zog_1dim) <- "Maksimum"
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, ts(dim1_20000_10000[,1]))
View(maksimumi_st_zog_1dim)
maksimumi_st_zog_1dim <- rbind(maksimumi_st_zog_1dim, ts(dim1_20000_10000[1,]))
nekaj <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_20000_10000)
View(nekaj)
nekaj <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_20000_10000[,1])
View(dim1_20000_10000)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_20000_10000)
View(maksimumi_st_zog_1dim)
maksimumi_st_zog_1dim2 <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_20000_10000)
maksimumi_st_zog_1dim <- dplyr::bind_rows(dim1_10000_10000, dim1_20000_10000)
View(maksimumi_st_zog_1dim)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_30000_10000)
View(maksimumi_st_zog_1dim)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_40000_10000)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_50000_10000)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_60000_10000)
plot(x=c(1:600), maksimumi_st_zog_1dim$Maksimum))
plot(x=c(1:600), maksimumi_st_zog_1dim$Maksimum)
maksimumi_st_zog_1dim <- dplyr::bind_rows(dim1_10000_10000, dim1_20000_10000)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_30000_10000)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_40000_10000)
maksimumi_st_zog_1dim <- dplyr::bind_rows(maksimumi_st_zog_1dim, dim1_50000_10000)
plot(x=c(1:500), maksimumi_st_zog_1dim$Maksimum)
plot(x=c(1:500), maksimumi_st_zog_1dim$Maksimum, pch=20)
plot(x=c(1:500), maksimumi_st_zog_1dim$Maksimum, type="l")
plot(x=c("maksimumi"), maksimumi_st_zog_1dim$Maksimum, type="l")
c(1:500)
plot(x=c(1:500), maksimumi_st_zog_1dim$Maksimum, type="l")
#dim1_60000_10000 <- read.csv("maksimalno_stevilo_zogic_100_100_60000_10000_1_1.csv")
plot(x=c(1:100), dim1_10000_10000$Maksimum)
plot(x=c(1:100), dim1_10000_10000$Maksimum)
plot(x=c(1:100), dim1_20000_10000$Maksimum)
plot(x=c(1:100), dim1_30000_10000$Maksimum)
plot(x=c(1:100), dim1_40000_10000$Maksimum)
plot(x=c(1:100), dim1_50000_10000$Maksimum)
plot(x=c(1:100), dim1_30000_10000$Maksimum)
plot(x=c(1:100), dim1_40000_10000$Maksimum)
plot(x=c(1:100), dim1_10000_10000$Maksimum)
plot(x=c(1:100), dim1_20000_10000$Maksimum)
plot(x=c(1:100), dim1_30000_10000$Maksimum)
plot(x=c(1:100), dim1_40000_10000$Maksimum)
abline(h=mean(dim1_10000_10000$Maksimum))
plot(x=c(1:100), dim1_10000_10000$Maksimum)
abline(h=mean(dim1_10000_10000$Maksimum))
plot(x=c(1:100), dim1_20000_10000$Maksimum)
abline(h=mean(dim1_20000_10000$Maksimum))
plot(x=c(1:100), dim1_10000_10000$Maksimum)
abline(h=mean(dim1_10000_10000$Maksimum))
plot(x=c(1:100), dim1_20000_10000$Maksimum)
abline(h=mean(dim1_20000_10000$Maksimum))
plot(x=c(1:100), dim1_30000_10000$Maksimum)
plot(x=c(1:100), dim1_40000_10000$Maksimum)
abline(h=mean(dim1_20000_10000$Maksimum))
plot(x=c(1:100), dim1_30000_10000$Maksimum)
abline(h=mean(dim1_30000_10000$Maksimum))
plot(x=c(1:100), dim1_40000_10000$Maksimum)
abline(h=mean(dim1_40000_10000$Maksimum))
plot(x=c(1:100), dim1_50000_10000$Maksimum)
abline(h=mean(dim1_50000_10000$Maksimum))
